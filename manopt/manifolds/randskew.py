# Autogenerated with SMOP 
from smop.core import *
# rotations/randskew.m

    
@function
def randskew(n=None,N=None,*args,**kwargs):
    varargin = randskew.varargin
    nargin = randskew.nargin

    # Generates random skew symmetric matrices with normal entries.
# 
# function S = randskew(n, N)
    
    # S is an n-by-n-by-N matrix where each slice S(:, :, i) for i = 1..N is a
# random skew-symmetric matrix with upper triangular entries distributed
# independently following a normal distribution (Gaussian, zero mean, unit
# variance).
    
    # See also: randrot
    
    # This file is part of Manopt: www.manopt.org.
# Original author: Nicolas Boumal, Sept. 25, 2012.
# Contributors: 
# Change log:
    
    if nargin < 2:
        N=1
# rotations/randskew.m:20
    
    # Subindices of the (strictly) upper triangular entries of an n-by-n
    # matrix
    I,J=find(triu(ones(n),1),nargout=2)
# rotations/randskew.m:25
    K=repmat(arange(1,N),dot(n,(n - 1)) / 2,1)
# rotations/randskew.m:27
    
    # an n-by-n-by-N matrix
    L=sub2ind(cat(n,n,N),repmat(I,N,1),repmat(J,N,1),ravel(K))
# rotations/randskew.m:31
    
    # populate each upper triangular entry with a random number following a
    # normal distribution and copy them with opposite sign on the
    # corresponding lower triangular side.
    S=zeros(n,n,N)
# rotations/randskew.m:37
    S[L]=randn(size(L))
# rotations/randskew.m:38
    S=S - multitransp(S)
# rotations/randskew.m:39
    return S
    
if __name__ == '__main__':
    pass
    