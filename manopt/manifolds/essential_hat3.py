# Autogenerated with SMOP 
from smop.core import *
# essential/essential_hat3.m

    #Compute the matrix representation of the cross product
#function [V,vShift] = essential_hat3(v)
#V is a [3x3xN] array of skew-symmetric matrices where each [3x3] block is
#the matrix representation of the cross product of one of the columns of v
#vShift is equal to permute(v,[1 3 2]).
    
@function
def essential_hat3(v=None,*args,**kwargs):
    varargin = essential_hat3.varargin
    nargin = essential_hat3.nargin

    N=size(v,2)
# essential/essential_hat3.m:7
    V=zeros(3,3,N)
# essential/essential_hat3.m:8
    vShift=permute(v,cat(1,3,2))
# essential/essential_hat3.m:9
    V[1,2,:]=- vShift[3,:,:]
# essential/essential_hat3.m:10
    V[2,1,:]=vShift[3,:,:]
# essential/essential_hat3.m:11
    V[1,3,:]=vShift[2,:,:]
# essential/essential_hat3.m:12
    V[3,1,:]=- vShift[2,:,:]
# essential/essential_hat3.m:13
    V[2,3,:]=- vShift[1,:,:]
# essential/essential_hat3.m:14
    V[3,2,:]=vShift[1,:,:]
# essential/essential_hat3.m:15
    return V,vShift
    
if __name__ == '__main__':
    pass
    