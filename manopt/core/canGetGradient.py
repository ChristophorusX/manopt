# Autogenerated with SMOP 
from smop.core import *
# canGetGradient.m

    
@function
def canGetGradient(problem=None,*args,**kwargs):
    varargin = canGetGradient.varargin
    nargin = canGetGradient.nargin

    # Checks whether the gradient can be computed for a problem structure.
# 
# function candoit = canGetGradient(problem)
    
    # Returns true if the gradient of the cost function can be computed given
# the problem description, false otherwise.
    
    # See also: canGetCost canGetDirectionalDerivative canGetHessian
    
    # This file is part of Manopt: www.manopt.org.
# Original author: Nicolas Boumal, Dec. 30, 2012.
# Contributors: 
# Change log:
    
    #   June 28, 2016 (NB):
#       Added support for getPartialGradient
    
    #   Nov. 1, 2016 (NB):
#       Added support for gradient from directional derivatives
    
    candoit=isfield(problem,'grad') or isfield(problem,'costgrad') or canGetEuclideanGradient(problem) or canGetPartialGradient(problem) or isfield(problem,'diff')
# canGetGradient.m:22
    return candoit
    
if __name__ == '__main__':
    pass
    