# Autogenerated with SMOP 
from smop.core import *
# canGetHessian.m

    
@function
def canGetHessian(problem=None,*args,**kwargs):
    varargin = canGetHessian.varargin
    nargin = canGetHessian.nargin

    # Checks whether the Hessian can be computed for a problem structure.
    
    # function candoit = canGetHessian(problem)
    
    # Returns true if the Hessian of the cost function can be computed given
# the problem description, false otherwise.
    
    # See also: canGetCost canGetDirectionalDerivative canGetGradient
    
    # This file is part of Manopt: www.manopt.org.
# Original author: Nicolas Boumal, Dec. 30, 2012.
# Contributors: 
# Change log:
    
    candoit=isfield(problem,'hess') or (isfield(problem,'ehess') and canGetEuclideanGradient(problem))
# canGetHessian.m:16
    
    # common mistakes.
    if logical_not(candoit) and (isfield(problem,'ehess') and logical_not(canGetEuclideanGradient(problem))):
        warning('manopt:canGetHessian',cat('If the Hessian is supplied as a Euclidean Hessian (ehess),\\n','then the Euclidean gradient must also be supplied (egrad).'))
    
    
    return candoit
    
if __name__ == '__main__':
    pass
    