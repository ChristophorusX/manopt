# Autogenerated with SMOP 
from smop.core import *
# mergeOptions.m

    
@function
def mergeOptions(opts1=None,opts2=None,*args,**kwargs):
    varargin = mergeOptions.varargin
    nargin = mergeOptions.nargin

    # Merges two options structures with one having precedence over the other.
    
    # function opts = mergeOptions(opts1, opts2)
    
    # input: opts1 and opts2 are two structures.
# output: opts is a structure containing all fields of opts1 and opts2.
# Whenever a field is present in both opts1 and opts2, it is the value in
# opts2 that is kept.
    
    # The typical usage is to have opts1 contain default options and opts2
# contain user-specified options that overwrite the defaults.
    
    # See also: getGlobalDefaults
    
    # This file is part of Manopt: www.manopt.org.
# Original author: Nicolas Boumal, Dec. 30, 2012.
# Contributors: 
# Change log:
    
    if isempty(opts1):
        opts1=struct()
# mergeOptions.m:23
    
    if isempty(opts2):
        opts2=struct()
# mergeOptions.m:26
    
    opts=copy(opts1)
# mergeOptions.m:29
    fields=fieldnames(opts2)
# mergeOptions.m:30
    for i in arange(1,length(fields)).reshape(-1):
        setattr(opts,fields[i],getattr(opts2,(fields[i])))
# mergeOptions.m:32
    
    
    return opts
    
if __name__ == '__main__':
    pass
    