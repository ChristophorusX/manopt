# Autogenerated with SMOP 
from smop.core import *
# neldermead/centroid.m

    
@function
def centroid(M=None,x=None,*args,**kwargs):
    varargin = centroid.varargin
    nargin = centroid.nargin

    # Attempts the computation of a centroid of a set of points on a manifold.
# 
# function y = centroid(M, x)
    
    # M is a structure representing a manifold.
# x is a cell of points on that manifold.
    
    # This file is part of Manopt: www.manopt.org.
# Original author: Nicolas Boumal, Dec. 30, 2012.
# Contributors: 
# Change log:
    
    # For now, just apply a few steps of gradient descent for Karcher means
    
    n=numel(x)
# neldermead/centroid.m:17
    problem.M = copy(M)
# neldermead/centroid.m:19
    problem.cost = copy(cost)
# neldermead/centroid.m:21
    
@function
def cost(y=None,*args,**kwargs):
    varargin = cost.varargin
    nargin = cost.nargin

    val=0
# neldermead/centroid.m:23
    for i in arange(1,n).reshape(-1):
        val=val + M.dist(y,x[i]) ** 2
# neldermead/centroid.m:25
    
    val=val / 2
# neldermead/centroid.m:27
    return val
    
if __name__ == '__main__':
    pass
    
    problem.grad = copy(grad)
# neldermead/centroid.m:30
    
@function
def grad(y=None,*args,**kwargs):
    varargin = grad.varargin
    nargin = grad.nargin

    g=M.zerovec(y)
# neldermead/centroid.m:32
    for i in arange(1,n).reshape(-1):
        g=M.lincomb(y,1,g,- 1,M.log(y,x[i]))
# neldermead/centroid.m:34
    
    return g
    
if __name__ == '__main__':
    pass
    
    # This line can be uncommented to check that the gradient is indeed
    # correct. This should always be the case if the dist and the log
    # functions in the manifold are correct.
    # checkgradient(problem); pause;
    
    query=warning('query','manopt:getHessian:approx')
# neldermead/centroid.m:43
    warning('off','manopt:getHessian:approx')
    options.verbosity = copy(0)
# neldermead/centroid.m:45
    options.maxiter = copy(15)
# neldermead/centroid.m:46
    y=trustregions(problem,x[randi(n)],options)
# neldermead/centroid.m:47
    warning(query.state,'manopt:getHessian:approx')
    return g
    
if __name__ == '__main__':
    pass
    